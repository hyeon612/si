{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\si\\\\sentence-island\\\\src\\\\components\\\\LetterScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/LetterScreen.css';\nimport letterBackground from '../images/편지.png';\nimport { categories } from '../data/sentences';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LetterScreen = ({\n  sentence,\n  isVisible,\n  onClose\n}) => {\n  _s();\n  const [displayedText, setDisplayedText] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [showMeta, setShowMeta] = useState(false);\n  useEffect(() => {\n    if (isVisible && sentence) {\n      setDisplayedText('');\n      setIsTyping(true);\n      setShowMeta(false);\n      let index = 0;\n      const typingInterval = setInterval(() => {\n        if (index <= sentence.text.length) {\n          setDisplayedText(sentence.text.slice(0, index));\n          index++;\n        } else {\n          setIsTyping(false);\n          setShowMeta(true);\n          clearInterval(typingInterval);\n        }\n      }, 50);\n      return () => clearInterval(typingInterval);\n    } else {\n      setDisplayedText('');\n      setIsTyping(false);\n      setShowMeta(false);\n    }\n  }, [sentence, isVisible]);\n  if (!isVisible || !sentence) return null;\n  const category = categories[sentence.category] || categories.all;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `letter-screen-overlay ${isVisible ? 'visible' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"letter-background\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: letterBackground,\n        alt: \"\\uD3B8\\uC9C0 \\uBC30\\uACBD\",\n        className: \"letter-bg-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"letter-close-button\",\n        onClick: onClose,\n        children: \"\\u2715\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"letter-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-tag\",\n          style: {\n            backgroundColor: category.color\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"category-emoji\",\n            children: category.emoji\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"category-name\",\n            children: category.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"letter-text\",\n          children: [\"\\\"\", displayedText, \"\\\"\", isTyping && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"typing-cursor\",\n            children: \"|\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), showMeta && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"letter-meta\",\n          children: [sentence.author ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"letter-author\",\n            children: [\"- \", sentence.author]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this) : !sentence.book ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"letter-author\",\n            children: \"- \\uC775\\uBA85\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this) : null, sentence.book && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"letter-book\",\n            children: [\"\\u300E\", sentence.book, \"\\u300F\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(LetterScreen, \"mu5oIyXcxV9lVZmzh3AZssRAGSQ=\");\n_c = LetterScreen;\nexport default LetterScreen;\nvar _c;\n$RefreshReg$(_c, \"LetterScreen\");","map":{"version":3,"names":["React","useState","useEffect","letterBackground","categories","jsxDEV","_jsxDEV","LetterScreen","sentence","isVisible","onClose","_s","displayedText","setDisplayedText","isTyping","setIsTyping","showMeta","setShowMeta","index","typingInterval","setInterval","text","length","slice","clearInterval","category","all","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","backgroundColor","color","emoji","name","author","book","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Downloads/si/sentence-island/src/components/LetterScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/LetterScreen.css';\nimport letterBackground from '../images/편지.png';\nimport { categories } from '../data/sentences';\n\nconst LetterScreen = ({ sentence, isVisible, onClose }) => {\n  const [displayedText, setDisplayedText] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [showMeta, setShowMeta] = useState(false);\n\n  useEffect(() => {\n    if (isVisible && sentence) {\n      setDisplayedText('');\n      setIsTyping(true);\n      setShowMeta(false);\n      \n      let index = 0;\n      const typingInterval = setInterval(() => {\n        if (index <= sentence.text.length) {\n          setDisplayedText(sentence.text.slice(0, index));\n          index++;\n        } else {\n          setIsTyping(false);\n          setShowMeta(true);\n          clearInterval(typingInterval);\n        }\n      }, 50);\n\n      return () => clearInterval(typingInterval);\n    } else {\n      setDisplayedText('');\n      setIsTyping(false);\n      setShowMeta(false);\n    }\n  }, [sentence, isVisible]);\n\n  if (!isVisible || !sentence) return null;\n\n  const category = categories[sentence.category] || categories.all;\n\n  return (\n    <div className={`letter-screen-overlay ${isVisible ? 'visible' : ''}`}>\n      <div className=\"letter-background\">\n        <img src={letterBackground} alt=\"편지 배경\" className=\"letter-bg-image\" />\n        \n        <button className=\"letter-close-button\" onClick={onClose}>\n          ✕\n        </button>\n        \n        <div className=\"letter-content\">\n          <div \n            className=\"category-tag\"\n            style={{ backgroundColor: category.color }}\n          >\n            <span className=\"category-emoji\">{category.emoji}</span>\n            <span className=\"category-name\">{category.name}</span>\n          </div>\n          \n          <p className=\"letter-text\">\n            \"{displayedText}\"\n            {isTyping && <span className=\"typing-cursor\">|</span>}\n          </p>\n          \n          {showMeta && (\n            <div className=\"letter-meta\">\n              {sentence.author ? (\n                <p className=\"letter-author\">- {sentence.author}</p>\n              ) : !sentence.book ? (\n                <p className=\"letter-author\">- 익명</p>\n              ) : null}\n              {sentence.book && (\n                <p className=\"letter-book\">『{sentence.book}』</p>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LetterScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
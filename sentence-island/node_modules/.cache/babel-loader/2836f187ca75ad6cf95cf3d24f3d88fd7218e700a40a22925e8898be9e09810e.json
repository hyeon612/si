{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Downloads\\\\si\\\\sentence-island\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MainScreen from './components/MainScreen';\nimport SandScreen from './components/SandScreen';\nimport LetterScreen from './components/LetterScreen';\nimport SendLetterScreen from './components/SendLetterScreen';\nimport useRandomSentence from './hooks/useRandomSentence';\nimport { sentences } from './data/sentences';\nimport './styles/global.css';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentScreen, setCurrentScreen] = useState('main'); // 'main', 'sand', 'letter', 'send'\n  const [mode, setMode] = useState(null); // 'category', 'send'\n  const [currentSentence, setCurrentSentence] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [showBottle, setShowBottle] = useState(false);\n  const [customSentences, setCustomSentences] = useState(() => {\n    const saved = localStorage.getItem('customSentences');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const {\n    getRandomSentence\n  } = useRandomSentence();\n  const handleModeSelect = selectedMode => {\n    if (selectedMode === 'send') {\n      setCurrentScreen('send');\n    } else if (selectedMode === 'category') {\n      setMode('category');\n    } else {\n      setMode(null);\n      setCurrentScreen('main');\n    }\n  };\n  const handleCategorySelect = category => {\n    setSelectedCategory(category);\n    setCurrentScreen('sand');\n    setShowBottle(true);\n  };\n  const handleBottleClick = () => {\n    const sentence = getRandomSentence(selectedCategory, customSentences);\n    setCurrentSentence(sentence);\n    setCurrentScreen('letter');\n  };\n  const handleSendLetter = formData => {\n    const newSentence = {\n      id: Date.now(),\n      // 임시 ID\n      text: formData.text,\n      author: formData.author || '',\n      book: formData.book || '',\n      category: formData.category,\n      tags: []\n    };\n    setCustomSentences(prev => [...prev, newSentence]);\n    alert('병편지가 성공적으로 보내졌습니다! 다른 사람들이 받아볼 수 있게 되었어요.');\n    setCurrentScreen('main');\n    setMode(null);\n  };\n  const handleCloseMessage = () => {\n    setCurrentScreen('main');\n    setCurrentSentence(null);\n    setSelectedCategory(null);\n    setShowBottle(false);\n    setMode(null);\n\n    // 화면 전환 후 상태 리셋\n    setTimeout(() => {\n      setCurrentScreen('main');\n    }, 500);\n  };\n  const handleBackToMain = () => {\n    setCurrentScreen('main');\n    setMode(null);\n    setCurrentSentence(null);\n    setSelectedCategory(null);\n    setShowBottle(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [currentScreen === 'main' && /*#__PURE__*/_jsxDEV(MainScreen, {\n      onCategorySelect: handleCategorySelect,\n      onModeSelect: handleModeSelect,\n      mode: mode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), currentScreen === 'sand' && /*#__PURE__*/_jsxDEV(SandScreen, {\n      onBottleClick: handleBottleClick,\n      showBottle: showBottle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), currentScreen === 'letter' && /*#__PURE__*/_jsxDEV(LetterScreen, {\n      sentence: currentSentence,\n      isVisible: currentScreen === 'letter',\n      onClose: handleCloseMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), currentScreen === 'send' && /*#__PURE__*/_jsxDEV(SendLetterScreen, {\n      onBack: handleBackToMain,\n      onSubmit: handleSendLetter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"VBSnM9tacsUD9cmM5RTNMKhxkw8=\", false, function () {\n  return [useRandomSentence];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MainScreen","SandScreen","LetterScreen","SendLetterScreen","useRandomSentence","sentences","jsxDEV","_jsxDEV","App","_s","currentScreen","setCurrentScreen","mode","setMode","currentSentence","setCurrentSentence","selectedCategory","setSelectedCategory","showBottle","setShowBottle","customSentences","setCustomSentences","saved","localStorage","getItem","JSON","parse","getRandomSentence","handleModeSelect","selectedMode","handleCategorySelect","category","handleBottleClick","sentence","handleSendLetter","formData","newSentence","id","Date","now","text","author","book","tags","prev","alert","handleCloseMessage","setTimeout","handleBackToMain","className","children","onCategorySelect","onModeSelect","fileName","_jsxFileName","lineNumber","columnNumber","onBottleClick","isVisible","onClose","onBack","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Downloads/si/sentence-island/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport MainScreen from './components/MainScreen';\nimport SandScreen from './components/SandScreen';\nimport LetterScreen from './components/LetterScreen';\nimport SendLetterScreen from './components/SendLetterScreen';\nimport useRandomSentence from './hooks/useRandomSentence';\nimport { sentences } from './data/sentences';\nimport './styles/global.css';\nimport './App.css';\n\nfunction App() {\n  const [currentScreen, setCurrentScreen] = useState('main'); // 'main', 'sand', 'letter', 'send'\n  const [mode, setMode] = useState(null); // 'category', 'send'\n  const [currentSentence, setCurrentSentence] = useState(null);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [showBottle, setShowBottle] = useState(false);\n  const [customSentences, setCustomSentences] = useState(() => {\n    const saved = localStorage.getItem('customSentences');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const { getRandomSentence } = useRandomSentence();\n\n  const handleModeSelect = (selectedMode) => {\n    if (selectedMode === 'send') {\n      setCurrentScreen('send');\n    } else if (selectedMode === 'category') {\n      setMode('category');\n    } else {\n      setMode(null);\n      setCurrentScreen('main');\n    }\n  };\n\n  const handleCategorySelect = (category) => {\n    setSelectedCategory(category);\n    setCurrentScreen('sand');\n    setShowBottle(true);\n  };\n\n  const handleBottleClick = () => {\n    const sentence = getRandomSentence(selectedCategory, customSentences);\n    setCurrentSentence(sentence);\n    setCurrentScreen('letter');\n  };\n\n  const handleSendLetter = (formData) => {\n    const newSentence = {\n      id: Date.now(), // 임시 ID\n      text: formData.text,\n      author: formData.author || '',\n      book: formData.book || '',\n      category: formData.category,\n      tags: []\n    };\n\n    setCustomSentences(prev => [...prev, newSentence]);\n    alert('병편지가 성공적으로 보내졌습니다! 다른 사람들이 받아볼 수 있게 되었어요.');\n    setCurrentScreen('main');\n    setMode(null);\n  };\n\n  const handleCloseMessage = () => {\n    setCurrentScreen('main');\n    setCurrentSentence(null);\n    setSelectedCategory(null);\n    setShowBottle(false);\n    setMode(null);\n    \n    // 화면 전환 후 상태 리셋\n    setTimeout(() => {\n      setCurrentScreen('main');\n    }, 500);\n  };\n\n  const handleBackToMain = () => {\n    setCurrentScreen('main');\n    setMode(null);\n    setCurrentSentence(null);\n    setSelectedCategory(null);\n    setShowBottle(false);\n  };\n\n  return (\n    <div className=\"App\">\n      {currentScreen === 'main' && (\n        <MainScreen \n          onCategorySelect={handleCategorySelect}\n          onModeSelect={handleModeSelect}\n          mode={mode}\n        />\n      )}\n      \n      {currentScreen === 'sand' && (\n        <SandScreen onBottleClick={handleBottleClick} showBottle={showBottle} />\n      )}\n      \n      {currentScreen === 'letter' && (\n        <LetterScreen\n          sentence={currentSentence}\n          isVisible={currentScreen === 'letter'}\n          onClose={handleCloseMessage}\n        />\n      )}\n      \n      {currentScreen === 'send' && (\n        <SendLetterScreen\n          onBack={handleBackToMain}\n          onSubmit={handleSendLetter}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}